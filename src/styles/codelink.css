/* LEGACY */

.flex-column {
  flex-direction: column;
}
.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.hidden {
  white-space: nowrap;
  overflow-x: hidden;
}
.sticky {
  position: sticky;
}

/* Adjustments for small devices of header layout and stick positions */
@media (max-width: 640px) {
  .header {
    flex-direction: row;
  }
}

/* legacy: loremipsum smooth scrolling */

/* Create event */

.create-event {
  padding-inline: 1em;
  gap: 1rem;
}
.create-event-button {
  background: white;
  border: none;
  box-shadow: rgba(0, 0, 0, 0.7) 0 0 5px;
  padding: 0.1em;
  border-radius: 100px;
  cursor: pointer;
  margin-top: 0.4rem;
  font-weight: 900;
}

input {
  border: none;
}
input:focus {
  outline: 1px solid gray;
}

.create-event-text {
  border-radius: 5px;
  background: lightgray;
  padding-block: 2px;
  padding-inline: clamp(2px, 1ch, 5ch);
}
.create-event-text:focus {
  background: white;
  color: black;
  font-weight: 900;
  box-shadow: rgba(0, 0, 0, 0.8) 0 0 5px;
}
.create-event-text[value]:not([value=""]) {
  background: white;
  color: black;
  font-weight: 900;
}
.from-to-dates {
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  flex: 0 1 100%;
}

.from-to-dates .create-event-text {
  width: clamp(9ch, 12ch, 15ch);
  margin-block: 0.5rem;
  text-align: center;
}

/* Text area */

.grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
}
.grow-wrap::after {
  /* Note the weird space! Needed to preventy jumpy behavior */
  content: attr(data-replicated-value) " ";

  /* This is how textarea text behaves */
  white-space: pre-wrap;

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;
}
.grow-wrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  resize: none;
  /* Firefox shows scrollbar on growth, you can hide like this. */
  overflow: hidden;
}
.grow-wrap > textarea,
.grow-wrap::after {
  /* Identical styling required!! */
  padding: 1px 1ch 1px 1ch;
  font: inherit;
  /* Place on top of each other */
}

textarea {
  border-radius: 5px;
  background: lightgray;
}

textarea:focus {
  box-shadow: rgba(0, 0, 0, 0.8) 0 0 5px;
  outline: 1px solid gray;
}

textarea:focus {
  background: white;
  color: black;
  box-shadow: rgba(0, 0, 0, 0.8) 0 0 5px;
}

.has-value {
  background: white;
  color: gray;
}
